#include <stdio.h>
#include <stdlib.h>
int evaluateExpression(char *expression) {
    int stack[100];
    int top = -1;
    int performOperation(char operator, int operand1, int operand2) {
        switch (operator) {
            case '+':
                return operand1 + operand2;
            case '-':
                return operand1 - operand2;
            case '*':
                return operand1 * operand2;
            case '/':
                return operand1 / operand2;
            default:
                return 0; 
        }
    }

    int isOperator(char ch) {
        return (ch == '+' || ch == '-' || ch == '*' || ch == '/');
    }
    for (int i = 0; expression[i] != '\0'; i++) {
        if (expression[i] >= '0' && expression[i] <= '9') {
            int num = 0;
            while (expression[i] >= '0' && expression[i] <= '9') {
                num = num * 10 + (expression[i] - '0');
                i++;
            }
            i--;
            stack[++top] = num;
        } else if (isOperator(expression[i])) {
            int operand2 = stack[top--];
            int operand1 = stack[top--];
            int result = performOperation(expression[i], operand1, operand2);
            stack[++top] = result;
        }
    }
    return stack[top];
}
int main() {
    char expression[100];
    printf("Enter an arithmetic expression: ");
    fgets(expression, sizeof(expression), stdin);
    if (expression[strlen(expression) - 1] == '\n') {
        expression[strlen(expression) - 1] = '\0';
    }
    int result = evaluateExpression(expression);
    printf("Result: %d\n", result);

    return 0;
}
